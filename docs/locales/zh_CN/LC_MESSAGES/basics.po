
msgid ""
msgstr ""
"Project-Id-Version: Python \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-26 09:46+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

msgid "Use the Build command line interface"
msgstr ""

msgid ""
"When you've written your book's content, it is now time to build outputs "
"for your book so that you may share them with others. For example, you "
"may wish to build HTML files to host as a static website, or a PDF to "
"share with colleagues."
msgstr ""

msgid "Build via the command-line"
msgstr ""

msgid "The basic way to build your book is via the following command:"
msgstr ""

msgid ""
"In addition, you may control the kinds of outputs that are generated, and"
" the ways in which your book conducts the build. The rest of the sections"
" on this page cover some of these options."
msgstr ""

msgid "Types of build outputs"
msgstr ""

msgid ""
"You can build a variety of outputs using Jupyter Book. To choose a "
"different builder, use the `--builder <builder-name>` configuration when "
"running `jupyter-book build` from the command-line."
msgstr ""

msgid "Here is a list of builders that are available to you:"
msgstr ""

msgid "`html`: HTML outputs (default)"
msgstr ""

msgid "`singlehtml`: A single HTML page for your book"
msgstr ""

msgid "`dirhtml`: HTML outputs with `<filename>/index.html` structure."
msgstr ""

msgid "`pdfhtml`: Build a PDF via HTML outputs (see [](pdf:html))"
msgstr ""

msgid "`linkcheck`: Run the Sphinx link checker (see [](html:link-check))"
msgstr ""

msgid "`latex`: Build Latex files for your book"
msgstr ""

msgid "`pdflatex`: Build a PDF of your book via Latex (see [](pdf:latex))"
msgstr ""

msgid "Clean your book's generated files"
msgstr ""

msgid ""
"It is possible to \"clean up\" the files that you generate when you build"
" your book. This is often useful if you have recently changed a lot of "
"content in order to ensure that you build your book from a clean slate."
msgstr ""

msgid ""
"You can clean up your book's generated content by running the following "
"command:"
msgstr ""

msgid ""
"By default, this will delete all folders inside `mybookname/_build` "
"*except* for a folder called `.jupyter_cache`. This ensures that the "
"*content* of your book will be regenerated, while the cache that is "
"generated by *running your book's code* will not be deleted (because "
"regenerating it may take some time)."
msgstr ""

msgid ""
"To delete the `.jupyter_cache` folder as well, add the `--all` flag like "
"so:"
msgstr ""

msgid "This will entirely remove the folders in the `_build/` directory."
msgstr ""

msgid "Debug your book's build process"
msgstr ""

msgid "When debugging your book build, the following options can be helpful:"
msgstr ""

msgid ""
"This will check for missing references (`-n`), turning them into errors "
"(`-W`), but will still attempt to run the full build (`--keep-going`), so"
" that you can see all errors in one run."
msgstr ""

msgid "You can also use `-v` or `-vvv` to increase verbosity."
msgstr ""

msgid "Build your book outputs"
msgstr ""

msgid ""
"These sections cover aspects of **building your book** - that is, "
"generating output artifacts using your book pages."
msgstr ""

msgid "Create books automatically"
msgstr ""

msgid ""
"This section covers how you can create books automatically in order to "
"get started more quickly."
msgstr ""

msgid "Create a book from a simple template"
msgstr ""

msgid ""
"Jupyter Book lets you quickly generate a book structure from templates. "
"This section covers the process of creating a template book and building "
"it as an alternative to manually creating the files in your book."
msgstr ""

msgid ""
"To see your options for creating books from templates, run the following "
"command:"
msgstr ""

msgid ""
"This option is best if you are starting from scratch, or would like to "
"see one example of a simple Jupyter Book on your own filesystem."
msgstr ""

msgid ""
"If you'd just like to quickly create a sample book, you may do so by "
"running the following command:"
msgstr ""

msgid ""
"This will generate a mini Jupyter Book that you can both build and "
"explore locally. It will have a few decisions made for you, and you can "
"explore the configuration of the book in `_config.yml` and its structure "
"in `_toc.yml`. Use this book as inspiration, or as a starting point to "
"work from."
msgstr ""

msgid "Create a more complete book from interactive prompts"
msgstr ""

msgid ""
"This option is best if you'd like to answer a few questions from the "
"command line in order to create a template book that is more complex and "
"customized for your use-case."
msgstr ""

msgid ""
"Jupyter Book also provides a [Jupyter Book "
"cookiecutter](https://github.com/executablebooks/cookiecutter-jupyter-"
"book) that can be used to interactively create a book directory "
"structure."
msgstr ""

msgid ""
"[`cookiecutter`](https://cookiecutter.readthedocs.io/en/latest/) is a "
"Python tool for quickly generating folders from a templatized repository."
" Jupyter Book uses `cookiecutter` under the hood."
msgstr ""

msgid ""
"The cookiecutter is suitable for users that want to create a ready-to-go "
"repository to host their book that includes pre-populated metafiles such "
"as `README`, `LICENSE`, `CONDUCT`, `CONTRIBUTING`, etc., as well as "
"GitHub Actions workflow files to [](publish/gh-actions)."
msgstr ""

msgid "To try the cookiecutter template, run the following command:"
msgstr ""

msgid ""
"For more help, see the [Jupyter Book cookiecutter GitHub "
"repository](https://github.com/executablebooks/cookiecutter-jupyter-"
"book), or run:"
msgstr ""

msgid "Create book files from a Table of Contents"
msgstr ""

msgid ""
"It is possible to use a `_toc.yml` file in order to create the skeleton "
"of a book automatically. This is useful if you wish to quickly generate "
"empty files from a single structure, and then populate them with content "
"yourselves."
msgstr ""

msgid ""
"To create your book's files from the Table of Contents, use the following"
" command:"
msgstr ""

msgid ""
"This will generate a collection of files according to the structure in "
"`_toc.yml`."
msgstr ""

msgid ""
"In addition, you have a few options to control the behavior of this tool."
" See below for reference."
msgstr ""

msgid "Structure and organize your content"
msgstr ""

msgid ""
"These sections describe how to organize the structure of your book or "
"article."
msgstr ""

msgid "Connect your book to a code repository"
msgstr ""

msgid ""
"There are many ways that you can connect your book's content back to the "
"source files in a public repository. Below we cover a few options."
msgstr ""

msgid "Add source repository buttons"
msgstr ""

msgid ""
"There is a collection of buttons that you can use to link back to your "
"source repository. This lets users browse the repository or take actions "
"like suggesting an edit or opening an issue. In each case, they require "
"the following configuration to be set:"
msgstr ""

msgid "Add a link to your repository"
msgstr ""

msgid "To add a link to your repository, add the following configuration:"
msgstr ""

msgid "Add a button to open issues"
msgstr ""

msgid ""
"To add a button to open an issue about the current page, use the "
"following configuration:"
msgstr ""

msgid "Add a button to suggest edits"
msgstr ""

msgid ""
"You can add a button to each page that will allow users to edit the page "
"text directly and submit a pull request to update the documentation. To "
"include this button, use the following configuration:"
msgstr ""

