
msgid ""
msgstr ""
"Project-Id-Version: Python \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-26 09:46+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

msgid "GitHub Pages and Actions"
msgstr ""

msgid ""
"Once your content is on GitHub, you can easily host it as a [GitHub "
"Pages](https://docs.github.com/en/github/working-with-github-pages) "
"website. This is a service where GitHub hosts your static files as if "
"they were a standalone website."
msgstr ""

msgid "There are three ways you can quickly host your book with GitHub Pages:"
msgstr ""

msgid ""
"Copy/paste your book's HTML to a `docs/` folder, or a `gh-pages` branch "
"of your repository."
msgstr ""

msgid ""
"Use the `ghp-import` tool to automatically push your built documentation "
"to a `gh-pages` branch."
msgstr ""

msgid ""
"Use a GitHub Action to automatically build your book and update your "
"website when you change the content."
msgstr ""

msgid "We'll cover each option below."
msgstr ""

msgid "Manually put your book's contents online"
msgstr ""

msgid ""
"In this case, you manually build your book's files, and then push them to"
" a GitHub repository in order to be hosted as a website. There are two "
"ways to do so"
msgstr ""

msgid "Make sure these steps are done first"
msgstr ""

msgid ""
"Before you do any of the following, make sure that these two steps are "
"completed:"
msgstr ""

msgid ""
"Build HTML for your book (see [](../start/build.md)). There should be a "
"collection of HTML files in your book's `_build/html` folder."
msgstr ""

msgid ""
"Configure your GitHub repository to serve a website via GitHub Pages at "
"the location of your choice (either a branch or the `docs/` folder). See "
"[the GitHub Pages documentation](https://docs.github.com/en/github"
"/working-with-github-pages) for more information."
msgstr ""

msgid "(Option 1) Copy and paste your book's `_build` contents into a new folder"
msgstr ""

msgid ""
"The simplest way to host your book online is to simply copy everything "
"that is inside `_build` and put it in a location where GitHub Pages knows"
" to look. There are two places we recommend:"
msgstr ""

msgid "In a separate branch"
msgstr ""

msgid ""
"You can configure GitHub Pages to build any books that are in a branch "
"that you specify. By default, this is `gh-pages`."
msgstr ""

msgid "In a `docs/` folder of your main branch"
msgstr ""

msgid ""
"If you'd like to keep your built book alongside your book's source files,"
" you may paste them into a `docs/` folder."
msgstr ""

msgid ""
"Note that copying all of your book's build files into the same branch as "
"your source files will cause your repository to become very large over "
"time, especially if you have many images in your book."
msgstr ""

msgid "In either case, follow these steps:"
msgstr ""

msgid ""
"Copy the contents of `_build/html` directory into `docs` (or your other "
"branch)."
msgstr ""

msgid ""
"Add a file called `.nojekyll` alongside your book's contents. This tells "
"GitHub Pages to treat your files as a \"static HTML website\"."
msgstr ""

msgid ""
"Push your changes to GitHub, and [configure it to start hosting your "
"documentation](https://docs.github.com/en/github/working-with-github-"
"pages)."
msgstr ""

msgid "(Option 2) Automatically push your build files with `ghp-import`"
msgstr ""

msgid ""
"The easiest way to use GitHub Pages with your built HTML is to use the "
"[`ghp-import`](https://github.com/davisp/ghp-import) package. `ghp-"
"import` is a lightweight Python package that makes it easy to push HTML "
"content to a GitHub repository."
msgstr ""

msgid ""
"`ghp-import` works by copying *all* of the contents of your built book "
"(i.e., the `_build/html` folder) to a branch of your repository called "
"`gh-pages`, and pushes it to GitHub. The `gh-pages` branch will be "
"created and populated automatically for you by `ghp-import`. To use `ghp-"
"import` to host your book online with GitHub Pages follow the steps "
"below:"
msgstr ""

msgid "Install `ghp-import`"
msgstr ""

msgid ""
"From the `master` branch of your book's root directory (which should "
"contain the `_build/html` folder) call `ghp-import` and point it to your "
"HTML files, like so:"
msgstr ""

msgid ""
"Make sure that you included the `-n`. This adds a file called `.nojekyll`"
" to the output of your book, which tells GitHub *not* to build your book "
"with [Jekyll](https://jekyllrb.com/)."
msgstr ""

msgid ""
"Typically after a few minutes your site should be viewable online at a "
"url such as: `https://<user>.github.io/<myonlinebook>/`. If not, check "
"your repository settings under **Pages** to ensure that the `gh-pages` "
"branch is configured as the build source for GitHub Pages and/or to find "
"the url address GitHub is building for you."
msgstr ""

msgid ""
"To update your online book, make changes to your book's content on the "
"`main` branch of your repository, re-build your book with `jupyter-book "
"build mybookname/` and then use `ghp-import -n -p -f "
"mylocalbook/_build/html` as before to push the newly built HTML to the "
"`gh-pages` branch."
msgstr ""

msgid ""
"Note this warning from the [`ghp-import` GitHub "
"repository](https://github.com/davisp/ghp-import):"
msgstr ""

#, python-format
msgid ""
"\"...*`ghp-import` will DESTROY your gh-pages branch... and assumes that "
"the `gh-pages` branch is 100% derivative. You should never edit files in "
"your `gh-pages` branch by hand if you're using this script...*\""
msgstr ""

msgid "Automatically host your book with GitHub Actions"
msgstr ""

msgid ""
"[GitHub Actions](https://docs.github.com/en/actions) is a tool that "
"allows you to automate things on GitHub. It is used for a variety of "
"things, such as testing, publishing packages and continuous integration."
msgstr ""

msgid ""
"Note that if you're not hosting your book on GitHub, or if you'd like "
"another, user-friendly service to build it automatically, see the [guide "
"to publishing your book on Netlify](./netlify.md)."
msgstr ""

msgid ""
"You should be familiar with GitHub Actions before using them to "
"automatically host your Jupyter Books. [See the GitHub Actions "
"documentation](https://help.github.com/en/actions) for more information."
msgstr ""

msgid ""
"To build your book with GitHub Actions, you'll need to create an action "
"that does the following things:"
msgstr ""

msgid ""
"Activates when a *push* event happens on `master` (or whichever) branch "
"has your latest book content."
msgstr ""

msgid "Installs Jupyter Book and any dependencies needed to build your book."
msgstr ""

msgid "Builds your book's HTML."
msgstr ""

msgid "Uses a `gh-pages` action to upload that HTML to your `gh-pages` branch."
msgstr ""

msgid ""
"For reference, [here is a sample "
"repository](https://github.com/executablebooks/github-action-demo) that "
"builds a book with GitHub Actions."
msgstr ""

msgid ""
"Make sure you use Jupyter Book >= `0.7.0`. To use the latest version, run"
" `pip install -U jupyter-book`."
msgstr ""

msgid ""
"You can use the [Jupyter Book "
"cookiecutter](https://github.com/executablebooks/cookiecutter-jupyter-"
"book) to quickly create a book template that already includes the GitHub "
"Actions workflow file needed to automatically deploy your book to GitHub "
"Pages:"
msgstr ""

msgid ""
"For more help, see the [Jupyter Book cookiecutter GitHub "
"repository](https://github.com/executablebooks/cookiecutter-jupyter-"
"book), or run:"
msgstr ""

msgid ""
"Here is a simple YAML configuration for a Github Action that will publish"
" your book to a `gh-pages` branch."
msgstr ""

msgid ""
"If you want to deploy your site to GitHub Pages at a User and "
"Organization repository (`<username>.github.io`), check another example "
"workflow and available options at the README of [peaceiris/actions-gh-"
"pages](https://github.com/peaceiris/actions-gh-pages)."
msgstr ""

msgid "Use a custom domain with GitHub Pages"
msgstr ""

msgid ""
"By default, GitHub Pages will host your book at a URL like "
"`githubusername.github.io/yourbookname`. If instead you'd like to use a "
"custom domain with your book, you'll need to take an extra step in the "
"instructions provided above. In both cases, you'll need to manually add a"
" `CNAME` file that indicates the custom URL for your book. To do so, "
"follow these steps:"
msgstr ""

msgid ""
"[Follow the instructions for setting up a custom domain with your "
"repository](https://docs.github.com/en/pages/configuring-a-custom-domain-"
"for-your-github-pages-site/managing-a-custom-domain-for-your-github-"
"pages-site#configuring-an-apex-domain)."
msgstr ""

msgid ""
"The result of this will generate a `CNAME` file in your repository's "
"filesystem. This is the file that tells GitHub pages where your site "
"lives, but it will be *overwritten* if you build and push your book's "
"HTML a second time."
msgstr ""

msgid ""
"Copy the contents of that CNAME file, and manually add the CNAME using "
"either `ghp-import` or the GitHub Action described above."
msgstr ""

msgid ""
"For `ghp-import`, see [the CNAME flag "
"instructions](https://github.com/c-w/ghp-import#usage)."
msgstr ""

#, python-format
msgid ""
"For the GitHub Action above, see [the CNAME configuration "
"instructions](https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-"
"add-cname-file-cname)."
msgstr ""

msgid "Publish with Netlify"
msgstr ""

msgid ""
"[Netlify](https://www.netlify.com/) is a continuous deployment service "
"that can **automatically build an updated copy of your Jupyter Book** as "
"you push new content. It can be used across git clients including GitHub,"
" GitLab, and Bitbucket."
msgstr ""

msgid ""
"Note that these instructions assume you're keeping your source files "
"under version control, rather than the built Jupyter Book HTML. If you're"
" pushing your HTML to GitHub, you'll want to [host your book on GitHub "
"Pages](./gh-pages.md) instead."
msgstr ""

msgid ""
"Although Netlify has both free and paid tiers, the build process is the "
"same across both Importantly, the free tier only allows for 100GB of "
"bandwidth usage per month across all of your Netlify built projects."
msgstr ""

msgid ""
"If your Jupyter Book will be used by a large audience, or if you're "
"creating many Jupyter Books, you might want to consider registering for "
"[a paid account](https://www.netlify.com/pricing/)."
msgstr ""

msgid ""
"In order to use Netlify, you'll need to [create an "
"account](https://app.netlify.com/signup). Here, we'll walk through "
"connecting your Jupyter Book to Netlify's continous deployment services "
"using their UI. You can also check out their [documentation on continuous"
" deployment](https://www.netlify.com/docs/continuous-deployment/)."
msgstr ""

msgid ""
"The default Netlify Python environment is Python 2.7. You should update "
"the Python environment by including a `runtime.txt` file in your "
"repository, as detailed in [the Netlify "
"documentation](https://www.netlify.com/docs/build-settings/#build-"
"environment-variables)."
msgstr ""

msgid ""
"For a full list of available environments, please see the [Netlify build "
"image details](https://github.com/netlify/build-"
"image/blob/xenial/included_software.md#languages)."
msgstr ""

msgid "Step 1: Connect your GitHub repo to Netlify"
msgstr ""

msgid ""
"After you've created a Netlify account, you'll need to log in. The home "
"page will be a dashboard of all sites you're currently building with "
"Netlify. We can then import a new site by clicking the \"New Site from "
"Git\" button in the upper right."
msgstr ""

msgid "This should launch [the site builder](https://app.netlify.com/start):"
msgstr ""

msgid ""
"![Netlify site "
"builder](https://miro.medium.com/max/3413/1*pV0iG0v_6N00_YC07gP7qA.png)"
msgstr ""

msgid "Netlify site builder"
msgstr ""

msgid ""
"Here, you can select the git client where your Jupyter Book is hosted. "
"For the purposes of this tutorial, we'll assume that your book is hosted "
"on GitHub."
msgstr ""

msgid ""
"When you select the \"GitHub\" option, you'll be asked to grant "
"permission for Netlify to access your GitHub account. Authorizing access "
"will take you to the next step of the build process, where you can select"
" your Jupyter Book repository."
msgstr ""

msgid "![Netlify continuous deployment](../images/netlify-cd.png)"
msgstr ""

msgid "Netlify continuous deployment"
msgstr ""

msgid "Step 2: Add the command to install and build your book"
msgstr ""

msgid ""
"If your book content is not in the root of your repository, make sure you"
" point to it in the `jupyter-book build` command."
msgstr ""

msgid ""
"Once you've selected the correct repository, you'll need to supply build "
"instructions. This is a command that Netlify runs before hosting your "
"site. We'll use it to do the following:"
msgstr ""

msgid "Install Jupyter Book and your book's dependencies"
msgstr ""

msgid "Build your book's HTML"
msgstr ""

msgid ""
"Assuming that your book's dependencies are in a `requirements.txt` file, "
"**put the following command in the *Build command* section**:"
msgstr ""

msgid ""
"Ensure that Jupyter Book's version in your `requirements.txt` file is at "
"least `0.7.0`."
msgstr ""

msgid "Finally, the *Publish directory* should be `_build/html`."
msgstr ""

msgid ""
"You'll also need to select the appropriate branch to build your "
"repository from. In this example, we'll use the `master` branch."
msgstr ""

msgid "![Netlify build command](../images/netlify-build.png)"
msgstr ""

msgid "Netlify build command"
msgstr ""

msgid ""
"You can then select *Deploy site* and wait for the site to build. You'll "
"be redirected to the site dashboard during the build process."
msgstr ""

msgid "Step 3: Updating your domain name"
msgstr ""

msgid ""
"If your site has successfully built, it will be assigned a random domain "
"name. In order to have a more memorable address, you can update your "
"site's name."
msgstr ""

msgid ""
"From the site dashboard, select *Domain settings*. This will take you to "
"a sub-menu, where you can choose to update your site name."
msgstr ""

msgid "![Netlify configure domain](../images/netlify-domain.png)"
msgstr ""

msgid "Netlify configure domain"
msgstr ""

msgid ""
"You can enter a memorable, unique name here to describe your Jupyter "
"Book! Note that it will be prepended to `.netlify.com` so, `MY-BOOK` will"
" become `MY-BOOK.netlify.com`."
msgstr ""

msgid ""
"You can also use a custom domain (i.e., one that you have purchased "
"through a DNS registrar). See the [Netlify documentation on custom "
"domains](https://www.netlify.com/docs/custom-domains/) for more details "
"on this process."
msgstr ""

msgid "Host your book on the internet"
msgstr ""

msgid ""
"A common way to publish your book content is to create an HTML version of"
" your book (also called a _static website_) and host it on the web "
"somewhere. There are a few ways to do this, and this section covers the "
"methods available to you."
msgstr ""

