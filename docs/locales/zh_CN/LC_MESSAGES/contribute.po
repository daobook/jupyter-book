# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-26 01:43+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

msgid "Contribute to Jupyter Book"
msgstr ""

msgid ""
"Welcome to the `jupyter-book` repository! We're excited you're here and "
"want to contribute. âœ¨"
msgstr ""

msgid "Be sure to check out our Code of Conduct"
msgstr ""

msgid ""
"The Executable Books community follows [this Code of "
"Conduct](https://github.com/executablebooks/.github/blob/master/CODE_OF_CONDUCT.md)"
" to ensure that our online spaces are enjoyable, inclusive, and "
"productive for all contributors."
msgstr ""

msgid "Development guidelines"
msgstr ""

msgid ""
"For information about development conventions, practices, and "
"infrastructure, please see [the `executablebooks/` development "
"guidelines](https://github.com/executablebooks/.github/blob/master/CONTRIBUTING.md)."
msgstr ""

msgid "Documentation guidelines"
msgstr ""

msgid ""
"The documentation of Jupyter Book is inspired by the [Diataxis "
"Documentation Framework](https://diataxis.fr/). This separates "
"documentation into four main areas:"
msgstr ""

msgid ""
"**Tutorials** are step-by-step guides that are learning-oriented. They "
"give the learner a feel for how a tool works, and get them excited about "
"learning more. Tutorials live in a dedicated section of the "
"documentation."
msgstr ""

msgid ""
"**How-To guides** are shorter guides that tell the reader how to do "
"something. They assume more background knowledge of Jupyter Book (often, "
"that they have read the tutorial). They are focused on \"doing things\" "
"rather than long explanations. How-To guides make up most of Jupyter "
"Book's documentation, and are separated into sections for various topics."
msgstr ""

msgid ""
"**Reference** documentation _describes_ Jupyter Book's structure and "
"functionality in a complete sense. It is more programmatic, less "
"narrative, and more interested in covering all configuration and options "
"in Jupyter Book rather than describing how and when to use them. Jupyter "
"Book has a reference section after our topic sections. In addition, it "
"has an organization-level reference section just underneath."
msgstr ""

msgid ""
"**Explanations** are higher-level discussions about topics and concepts "
"related to Jupyter Book. They are less focused on doing things, and more "
"focused on gaining a conceptual framework for how Jupyter Book works. "
"Jupyter Book currently has no dedicated explanation section, but welcomes"
" the addition of explanatory content and potentially a dedicated section."
msgstr ""

msgid ""
"These four areas are not **strict rules** for the Jupyter Book "
"documentation, but should serve as inspiration in deciding what to "
"document, and where. Any contributions to the documentation that fall "
"within this framework (e.g., adding a new tutorial, adding a How To "
"section) are most-welcome!"
msgstr ""

msgid "Getting started"
msgstr ""

msgid "To get started with Jupyter Book's *codebase*, take the following steps:"
msgstr ""

msgid "Clone and install the package"
msgstr ""

msgid "Next, install:"
msgstr ""

msgid ""
"This will install Jupyter Book locally, along with the packages needed to"
" test it as well as packages for ensuring code style."
msgstr ""

msgid "Install the pre-commit hooks"
msgstr ""

msgid ""
"Jupyter Book uses [pre-commit](https://pre-commit.com/) to ensure code "
"style and quality before a commit is made. This ensures that the look and"
" feel of Jupyter Book remains consistent over time and across developers."
" `pre-commit` is installed when you install Jupyter Book with `pip "
"install -e .[code_style]`."
msgstr ""

msgid ""
"To enable `pre-commit` for your clone, run the following from the "
"repository root:"
msgstr ""

msgid ""
"From now on, when you make a commit to Jupyter Book, `pre-commit` will "
"ensure that your code looks correct according to a few checks."
msgstr ""

msgid "Run the tests"
msgstr ""

msgid ""
"For code tests, Jupyter Book uses [pytest](https://docs.pytest.org)). You"
" may run all the tests, or only ones that do not require additional "
"installations, with the following command:"
msgstr ""

msgid ""
"You can alternatively use [tox](https://tox.readthedocs.io) to run the "
"tests in multiple isolated environments, and also without the need for "
"the initial dependencies install (see the `tox.ini` file for available "
"test environments and further explanation):"
msgstr ""

msgid ""
"Either will run the Jupyter Book test suite, *except for the PDF tests*. "
"This is because running the PDF generation tests requires a full LaTeX "
"environment, which you may not have set up."
msgstr ""

msgid ""
"Jupyter Book makes use of [pytest-xdist](https://github.com/pytest-dev"
"/pytest-xdist) for running tests in parallel. You can take advantage of "
"this by running tests with the `-n` argument followed by the number of "
"CPUs you would like to use. For example: `pytest -n 4`. This makes the "
"tests run much faster."
msgstr ""

msgid "To test PDF generation"
msgstr ""

msgid ""
"If you'd like to test (or try out) the generation of PDFs, take the "
"following steps:"
msgstr ""

msgid ""
"**To generate PDFs via HTML**, make sure you install Jupyter Book with "
"`pip install -e .[pdfhtml]`. This will install "
"[`pyppeteer`](https://github.com/pyppeteer/pyppeteer), which runs a "
"headless chrome session to convert your book to PDF. Next, follow the "
"installation instructions at {ref}`pdf:html`. You should then be able to "
"build your book's PDF through HTML."
msgstr ""

msgid ""
"**To generate PDFs via LaTeX**, make sure you install a working LaTeX "
"distribution locally. Do so by following the instructions in "
"{ref}`pdf:latex`."
msgstr ""

msgid ""
"If you have installed the requirements for both HTML and LaTeX "
"generation, you should be able to run the full test suite with pytest."
msgstr ""

msgid "GitHub Actions Artifacts"
msgstr ""

msgid ""
"A test included for each pull request is to build the `docs` as `PDF` "
"files using both the `pdfhtml` and `pdflatex` writers. These tests build "
"the `pdf` file and then save them as artifacts attached to each workflow "
"run."
msgstr ""

msgid ""
"These `pdf` files can be retrieved from the [top right corner of a "
"workflow run](https://github.com/actions/upload-artifact#where-does-the-"
"upload-go)."
msgstr ""

msgid "Repository structure of Jupyter Book"
msgstr ""

msgid ""
"This section covers the general structure of the [Jupyter Book "
"repository](https://github.com/executablebooks/jupyter-book), and "
"explains which pieces are where."
msgstr ""

msgid "The Jupyter Book repository contains two main pieces:"
msgstr ""

msgid "MyST Markdown"
msgstr ""

msgid ""
"Jupyter Book supports an *extended version of Jupyter Markdown* called "
"\"MyST Markdown\". For information about the MyST syntax and how to use "
"it, see [the MyST-Parser documentation](https://myst-"
"parser.readthedocs.io/en/latest/using/syntax.html)."
msgstr ""

msgid "The command-line tool and Python package"
msgstr ""

msgid ""
"This is used to help create and build books. It can be found at "
"[`./jupyter_book`](https://github.com/executablebooks/jupyter-"
"book/tree/master/jupyter_book)."
msgstr ""

msgid ""
"**The `commands/` folder has the CLI**. This is the interface for users "
"to create, build and control their book via the command-line."
msgstr ""

msgid "**The `sphinx.py` module builds the books**."
msgstr ""

msgid "**The `yaml.py` module handles configuration**."
msgstr ""

msgid "**The `toc.py` module prepares the table of contents**."
msgstr ""

msgid ""
"The other modules handle more specific functionality in Jupyter Book - "
"see their module docstrings for more information."
msgstr ""

msgid "The template Jupyter Book"
msgstr ""

msgid ""
"Jupyter Book comes bundled with a small template book to show off "
"content. This can be immediately built with `jupyter-book build`. It can "
"be found at "
"[`jupyter_book/book_template`](https://github.com/executablebooks"
"/jupyter-book/tree/master/jupyter_book/book_template)."
msgstr ""

msgid "An example"
msgstr ""

msgid ""
"Here are a few examples of how this code gets used to help you get "
"started."
msgstr ""

msgid ""
"when somebody runs `jupyter-book create mybook/`, the `create.py` module "
"is used to generate an empty template using the template in "
"`jupyter_book/book_template/`."
msgstr ""

msgid ""
"when somebody runs `jupyter-book build mybook/`, the `build.py` module "
"loops through your page content files, and uses the `page/` module to "
"convert each one into HTML and places it in `mybook/_build`."
msgstr ""

msgid ""
"Hopefully this explanation gets you situated and helps you understand how"
" the pieces all fit together. If you have any questions, feel free to "
"[open an issue asking for help](https://github.com/executablebooks"
"/jupyter-book/issues/new)!"
msgstr ""

msgid "Other major tools in the Jupyter Book stack"
msgstr ""

msgid ""
"Jupyter Book depends on a collection of open source tools in the Python /"
" Sphinx ecosystem. These tools do much of the heavy lifting of Jupyter "
"Book, and are where many improvements and changes will need to be. Here "
"is a list of the major tools and what kinds of functionality they "
"support:"
msgstr ""

msgid ""
"{term}`The Sphinx Documentation engine<Sphinx>` is used to build book "
"outputs. This relies on a number of extensions that are developed by "
"Jupyter Book."
msgstr ""

msgid ""
"{term}`MyST Markdown<MyST>` is parsed into Sphinx by {term}`the MyST-"
"Parser<MyST-Parser>`."
msgstr ""

msgid ""
"{term}`The MyST-NB package<MyST-NB>` parses Jupyter Notebooks into Sphinx"
" and also controls some parts of notebook execution. It also allows "
"[inserting code outputs into content](content:code-outputs:glue)."
msgstr ""

msgid ""
"{term}`Jupyter-Cache` manages the execution and cacheing of notebook "
"content at build time. It is controlled by {term}`MyST-NB`."
msgstr ""

msgid ""
"The {term}`Sphinx Book Theme` defines the look and feel of Jupyter Book, "
"and is where most of the CSS rules are defined."
msgstr ""

